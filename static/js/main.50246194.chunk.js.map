{"version":3,"sources":["assets/angel.png","assets/wing.png","components/TitleSlide.tsx","components/SquisherSlide.tsx","components/CodeSlide.tsx","components/IntroSlide.tsx","demos/GridDemo.tsx","demos/FlexboxDemo.tsx","demos/CenteringDemo.tsx","demos/StickyDemo.tsx","demos/TransformFailureDemo.tsx","demos/TransformDemo.tsx","demos/AspectRatioDemo.tsx","demos/RelativeOffsetDemo.tsx","demos/RelativeOffsetDemo2.tsx","demos/HeadingWrapDemo.tsx","Presentation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TitleSlide","ordinal","title","height","style","textAlign","Wrapper","styled","div","DemoWrapper","Squisher","CenteringSlide","demo","counters","n","push","useState","squishAmount","setSquishAmount","paddingRight","width","fontSize","onClick","Math","min","CodeSlide","source","language","autoFillHeight","Top","Bottom","IntroSlide","color","fontWeight","position","src","require","alt","top","right","transform","MyGrid","Item","GridDemo","map","counter","key","MyFlexbox","MyBox1","MyBox2","FlexboxDemo","MyBox","MyText","CenteringDemo","MyAd","StickyDemo","bounce","keyframes","Ball","COLOURS","TransformDemo","backgroundColor","length","left","animationDelay","random","MyDivider","MyDividerLabel","RelativeOffsetDemo","MyButton","RelativeOffsetDemo2","MyHeading","MyTextSegment","span","HeadingWrapDemo","THEME","colors","primary","secondary","tertiary","quaternary","quinary","Presentation","theme","SquisherSlide","TransformFailureDemo","AspectRatioDemo","display","GlobalStyles","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50246194.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angel.8c0faa9b.png\";","module.exports = __webpack_public_path__ + \"static/media/wing.ddef0d0b.png\";","import React from 'react';\nimport { Box, FlexBox, Heading, Text } from 'spectacle';\n\ninterface IProps {\n    ordinal: number;\n    title: React.ReactNode;\n}\n\nconst TitleSlide: React.FC<IProps> = ({ ordinal, title }) => {\n    return (\n        <FlexBox height=\"100%\">\n            <Box>\n                <Heading>#{ordinal} Designer says:</Heading>\n                <Text style={{ textAlign: 'center' }}>{title}</Text>\n            </Box>\n        </FlexBox>\n    );\n};\n\nexport default TitleSlide;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FlexBox } from 'spectacle';\n\nconst Wrapper = styled.div`\n    flex: auto;\n    height: 100%;\n    overflow: hidden;\n    display: flex;\n`;\n\nconst DemoWrapper = styled.div`\n    flex: auto;\n    overflow: auto;\n    padding-right: 18px;\n`;\n\nconst Squisher = styled.div`\n    flex: 0 0 auto;\n    background-color: #ff5400;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-weight: 700;\n    box-shadow: inset 0 -6px 36px rgba(0, 0, 0, 0.25);\n    border-radius: 4px;\n    transition: 0.1s ease;\n    user-select: none;\n    :hover {\n        box-shadow: inset 0 -6px 36px rgba(0, 0, 0, 0.45);\n    }\n    :active {\n        box-shadow: inset 0 -6px 36px rgba(0, 0, 0, 0.15);\n    }\n`;\n\ninterface IProps {\n    demo: React.ReactNode;\n}\n\nconst CenteringSlide: React.FC<IProps> = ({ demo }) => {\n    const counters = [];\n    for (let n = 0; n < 60; n++) {\n        counters.push(n);\n    }\n    const [squishAmount, setSquishAmount] = useState(10);\n    return (\n        <FlexBox height=\"100%\">\n            <Wrapper>\n                <DemoWrapper\n                    style={squishAmount >= 100 ? { paddingRight: 0 } : {}}\n                >\n                    {demo}\n                </DemoWrapper>\n                <Squisher\n                    style={{\n                        width: `${squishAmount}%`,\n                        fontSize: 18 + (120 * squishAmount) / 100,\n                    }}\n                    onClick={() =>\n                        setSquishAmount(Math.min(squishAmount + 10, 100))\n                    }\n                >\n                    {squishAmount < 100 ? 'SQUISH' : 'VICTORY'}\n                </Squisher>\n            </Wrapper>\n        </FlexBox>\n    );\n};\n\nexport default CenteringSlide;\n","import React from 'react';\n\nimport { CodePane } from 'spectacle';\n\ninterface IProps {\n    source: string;\n}\n\nconst CodeSlide: React.FC<IProps> = ({ source }) => {\n    return (\n        <CodePane language=\"ts\" autoFillHeight>\n            {source}\n        </CodePane>\n    );\n};\n\nexport default CodeSlide;\n","import React from 'react';\nimport { Box, FlexBox, Text } from 'spectacle';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    flex: auto;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Top = styled.div`\n    height: 50%;\n    background-color: #ff5400;\n    padding: 12px 84px;\n`;\n\nconst Bottom = styled.div`\n    height: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    background-color: white;\n`;\n\ninterface IProps {}\n\nconst IntroSlide: React.FC<IProps> = () => {\n    return (\n        <FlexBox height=\"100%\">\n            <Wrapper>\n                <Top>\n                    <Text\n                        color=\"white\"\n                        style={{ fontWeight: 400, fontSize: 64 }}\n                    >\n                        <u>\n                            <b>Never</b> <i>disappoint</i>\n                        </u>{' '}\n                        a designer again with these{' '}\n                        <span style={{ fontSize: '1.15em' }}>\n                            <b>9</b> simple\n                        </span>{' '}\n                        CSS tricks!\n                    </Text>\n                    <Text\n                        color=\"white\"\n                        style={{\n                            fontWeight: 400,\n                            textAlign: 'right',\n                            fontSize: 42,\n                            position: 'relative',\n                        }}\n                    >\n                        (Warning: #2 will give your resume wings)\n                        <img\n                            src={require('../assets/angel.png')}\n                            alt=\"\"\n                            style={{\n                                position: 'absolute',\n                                top: -36,\n                                right: 50,\n                                height: 60,\n                            }}\n                        />\n                        <img\n                            src={require('../assets/wing.png')}\n                            alt=\"\"\n                            style={{\n                                position: 'absolute',\n                                top: -36,\n                                right: 108,\n                                height: 60,\n                            }}\n                        />\n                        <img\n                            src={require('../assets/wing.png')}\n                            alt=\"\"\n                            style={{\n                                transform: 'scale(-1, 1)',\n                                position: 'absolute',\n                                top: -36,\n                                right: -4,\n                                height: 60,\n                            }}\n                        />\n                    </Text>\n                </Top>\n                <Bottom>\n                    <Box>\n                        <Text\n                            color=\"#444\"\n                            style={{\n                                fontSize: 42,\n                                textAlign: 'right',\n                            }}\n                        >\n                            A ResQ Lunch & Learn\n                        </Text>\n                        <Text\n                            color=\"#444\"\n                            style={{\n                                fontSize: 26,\n                                textAlign: 'right',\n                            }}\n                        >\n                            Presented By Hans Yu\n                        </Text>\n                    </Box>\n                </Bottom>\n            </Wrapper>\n        </FlexBox>\n    );\n};\n\nexport default IntroSlide;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MyGrid = styled.div`\n    background-color: #666;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 18px;\n    padding: 18px;\n`;\n\nconst Item = styled.div`\n    img {\n        width: 100%;\n    }\n`;\n\nconst GridDemo: React.FC = () => {\n    const counters = [];\n    for (let n = 0; n < 60; n++) {\n        counters.push(n);\n    }\n    return (\n        <MyGrid>\n            {counters.map(counter => (\n                <Item key={counter}>\n                    <img src={require('../assets/angel.png')} alt=\"\" />\n                </Item>\n            ))}\n        </MyGrid>\n    );\n};\n\nexport default GridDemo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MyFlexbox = styled.div`\n    height: 100%;\n    background-color: #666;\n    display: flex;\n`;\n\nconst MyBox1 = styled.div`\n    flex: 0 0 auto;\n    width: 200px;\n    background-color: #ffd300;\n`;\n\nconst MyBox2 = styled.div`\n    flex: auto;\n    background-color: #00bd00;\n`;\n\nconst FlexboxDemo: React.FC = () => {\n    return (\n        <MyFlexbox>\n            <MyBox1 />\n            <MyBox2 />\n        </MyFlexbox>\n    );\n};\n\nexport default FlexboxDemo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MyBox = styled.div`\n    height: 100%;\n    background-color: #666;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst MyText = styled.div`\n    max-width: 600px;\n    font-size: 60px;\n    color: white;\n    text-align: center;\n`;\n\nconst CenteringDemo: React.FC = () => {\n    return (\n        <MyBox>\n            <MyText>\n                Designer said I need to be centered. How am I doing? Do I pass?\n            </MyText>\n        </MyBox>\n    );\n};\n\nexport default CenteringDemo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport IntroSlide from '../components/IntroSlide';\n\nconst Wrapper = styled.div`\n    background-color: #666;\n    height: 100%;\n    padding: 36px;\n    overflow: auto;\n    > * {\n        margin-bottom: 36px;\n        :last-child {\n            margin-bottom: 0;\n        }\n    }\n`;\n\nconst MyAd = styled.div`\n    height: 440px;\n    position: sticky;\n    top: 0;\n    > * {\n        transform: scale(0.5);\n        transform-origin: center top;\n        height: 200%;\n    }\n`;\n\nconst MyText = styled.div`\n    color: white;\n    font-size: 24px;\n`;\n\nconst StickyDemo: React.FC = () => {\n    return (\n        <Wrapper>\n            <MyText>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                Bibendum neque egestas congue quisque egestas diam in arcu\n                cursus. Eget mauris pharetra et ultrices neque. Amet luctus\n                venenatis lectus magna fringilla urna porttitor. Et tortor\n                consequat id porta nibh venenatis cras. Eget nunc scelerisque\n                viverra mauris. Consectetur purus ut faucibus pulvinar elementum\n                integer enim. Sem fringilla ut morbi tincidunt augue interdum.\n                Turpis egestas maecenas pharetra convallis. Consectetur lorem\n                donec massa sapien faucibus et. Nulla aliquet enim tortor at\n                auctor. Elementum curabitur vitae nunc sed velit dignissim\n                sodales ut. Mus mauris vitae ultricies leo integer malesuada\n                nunc. Interdum velit laoreet id donec ultrices tincidunt.\n                Porttitor rhoncus dolor purus non enim praesent elementum\n                facilisis. Ultrices gravida dictum fusce ut placerat orci nulla.\n                A pellentesque sit amet porttitor. Volutpat consequat mauris\n                nunc congue. Nibh ipsum consequat nisl vel.\n            </MyText>\n            <MyText>\n                Nunc lobortis mattis aliquam faucibus purus. Duis tristique\n                sollicitudin nibh sit amet commodo nulla facilisi. Mi bibendum\n                neque egestas congue quisque. Tempus quam pellentesque nec nam\n                aliquam sem et tortor. Blandit cursus risus at ultrices mi\n                tempus. Pellentesque diam volutpat commodo sed egestas.\n                Malesuada fames ac turpis egestas sed tempus urna et. Enim sit\n                amet venenatis urna cursus eget. Ridiculus mus mauris vitae\n                ultricies leo. Dignissim enim sit amet venenatis urna cursus\n                eget. Fringilla ut morbi tincidunt augue interdum velit euismod\n                in. Blandit aliquam etiam erat velit. Aliquam faucibus purus in\n                massa tempor nec feugiat. Volutpat consequat mauris nunc congue\n                nisi vitae suscipit tellus mauris.\n            </MyText>\n            <MyAd>\n                <IntroSlide />\n            </MyAd>\n            <MyText>\n                Orci porta non pulvinar neque laoreet. Turpis egestas integer\n                eget aliquet nibh praesent tristique magna. Platea dictumst\n                vestibulum rhoncus est pellentesque. Pellentesque elit\n                ullamcorper dignissim cras tincidunt lobortis feugiat. Massa\n                tempor nec feugiat nisl pretium fusce id velit ut. Adipiscing\n                elit duis tristique sollicitudin. Faucibus scelerisque eleifend\n                donec pretium vulputate. Donec et odio pellentesque diam\n                volutpat commodo sed egestas. A diam sollicitudin tempor id eu\n                nisl nunc mi ipsum. Feugiat vivamus at augue eget arcu dictum\n                varius. Magnis dis parturient montes nascetur ridiculus mus.\n                Nibh tortor id aliquet lectus proin nibh. Purus ut faucibus\n                pulvinar elementum integer enim. Vel risus commodo viverra\n                maecenas.\n            </MyText>\n            <MyText>\n                Turpis egestas pretium aenean pharetra magna ac placerat\n                vestibulum. Eros in cursus turpis massa tincidunt dui ut ornare\n                lectus. Nunc consequat interdum varius sit amet mattis vulputate\n                enim. Nulla pharetra diam sit amet nisl suscipit adipiscing.\n                Bibendum est ultricies integer quis auctor elit sed vulputate\n                mi. Sagittis id consectetur purus ut faucibus pulvinar elementum\n                integer. Diam quis enim lobortis scelerisque fermentum dui\n                faucibus. Nunc vel risus commodo viverra. Sed libero enim sed\n                faucibus turpis. Et tortor at risus viverra adipiscing at in\n                tellus. Faucibus purus in massa tempor nec feugiat nisl.\n                Sagittis orci a scelerisque purus. Commodo sed egestas egestas\n                fringilla. In metus vulputate eu scelerisque felis imperdiet.\n                Egestas tellus rutrum tellus pellentesque eu tincidunt tortor.\n                Ultricies mi quis hendrerit dolor magna eget est lorem ipsum.\n                Semper auctor neque vitae tempus quam pellentesque. Nulla\n                aliquet enim tortor at. Sodales ut etiam sit amet. At lectus\n                urna duis convallis convallis tellus id interdum.\n            </MyText>\n            <MyText>\n                In massa tempor nec feugiat nisl pretium fusce. Fringilla\n                phasellus faucibus scelerisque eleifend. Quam lacus suspendisse\n                faucibus interdum posuere lorem ipsum dolor. Purus in mollis\n                nunc sed. Volutpat sed cras ornare arcu dui. Posuere urna nec\n                tincidunt praesent semper feugiat nibh sed. Interdum velit\n                laoreet id donec ultrices tincidunt arcu non sodales. Morbi\n                tristique senectus et netus et malesuada fames ac turpis. Vitae\n                nunc sed velit dignissim sodales ut eu sem integer. Mattis nunc\n                sed blandit libero volutpat sed cras. Leo duis ut diam quam\n                nulla porttitor massa.\n            </MyText>\n        </Wrapper>\n    );\n};\n\nexport default StickyDemo;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst MyBox = styled.div`\n    height: 100%;\n    background-color: #666;\n    position: relative;\n`;\n\nconst bounce = keyframes`\n  0% {\n    bottom: 0;\n    animation-timing-function: ease-out;\n  }\n\n  50% {\n    bottom: calc(90vh - 64px);\n    animation-timing-function: ease-in;\n  }\n\n  100% {\n    bottom: 0;\n  }\n`;\n\nconst Ball = styled.div`\n    flex: 0 0 auto;\n    width: 4%;\n    margin-left: 0.5%;\n    border-radius: 50%;\n    box-shadow: inset -12px -12px 12px rgba(0, 0, 0, 0.25);\n    position: absolute;\n    bottom: 0;\n    animation-name: ${bounce};\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n    :after {\n        content: '';\n        display: block;\n        padding-bottom: 100%;\n    }\n`;\n\nconst COLOURS = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'purple'];\n\nconst TransformDemo: React.FC = () => {\n    const counters = [];\n    for (let n = 0; n < 200; n++) {\n        counters.push(n);\n    }\n    return (\n        <MyBox>\n            {counters.map(counter => (\n                <Ball\n                    key={counter}\n                    style={{\n                        backgroundColor: COLOURS[counter % COLOURS.length],\n                        left: `${5 * (counter % 20)}%`,\n                        animationDelay: `${Math.random() + 2}s`,\n                    }}\n                />\n            ))}\n        </MyBox>\n    );\n};\n\nexport default TransformDemo;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst MyBox = styled.div`\n    height: 100%;\n    background-color: #666;\n    position: relative;\n`;\n\nconst bounce = keyframes`\n  0% {\n    transform: translateY(0);\n    animation-timing-function: ease-out;\n  }\n\n  50% {\n    transform: translateY(calc(-90vh + 64px));\n    animation-timing-function: ease-in;\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n`;\n\nconst Ball = styled.div`\n    flex: 0 0 auto;\n    width: 4%;\n    margin-left: 0.5%;\n    border-radius: 50%;\n    box-shadow: inset -12px -12px 12px rgba(0, 0, 0, 0.25);\n    position: absolute;\n    bottom: 0;\n    animation-name: ${bounce};\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n    :after {\n        content: '';\n        display: block;\n        padding-bottom: 100%;\n    }\n`;\n\nconst COLOURS = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'purple'];\n\nconst TransformDemo: React.FC = () => {\n    const counters = [];\n    for (let n = 0; n < 200; n++) {\n        counters.push(n);\n    }\n    return (\n        <MyBox>\n            {counters.map(counter => (\n                <Ball\n                    key={counter}\n                    style={{\n                        backgroundColor: COLOURS[counter % COLOURS.length],\n                        left: `${5 * (counter % 20)}%`,\n                        animationDelay: `${Math.random() + 2}s`,\n                    }}\n                />\n            ))}\n        </MyBox>\n    );\n};\n\nexport default TransformDemo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MyGrid = styled.div`\n    background-color: #666;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 18px;\n    padding: 18px;\n`;\n\nconst Item = styled.div`\n    padding-bottom: 100%;\n    background-color: white;\n`;\n\nconst GridDemo: React.FC = () => {\n    const counters = [];\n    for (let n = 0; n < 60; n++) {\n        counters.push(n);\n    }\n    return (\n        <MyGrid>\n            {counters.map(counter => (\n                <Item key={counter} />\n            ))}\n        </MyGrid>\n    );\n};\n\nexport default GridDemo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    height: 100%;\n    background-color: #666;\n    padding: 36px;\n    overflow: auto;\n`;\n\nconst MyText = styled.div`\n    color: white;\n    font-size: 24px;\n`;\n\nconst MyDivider = styled.div`\n    margin: 120px 0;\n    position: relative;\n    border-top: 3px solid white;\n`;\n\nconst MyDividerLabel = styled.div`\n    font-size: 60px;\n    color: white;\n    text-align: center;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%, -60%);\n    line-height: 1;\n    background: #666;\n    padding: 0 12px;\n`;\n\nconst RelativeOffsetDemo: React.FC = () => {\n    const counters = [];\n    for (let n = 0; n < 60; n++) {\n        counters.push(n);\n    }\n    return (\n        <Wrapper>\n            <MyText>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                Bibendum neque egestas congue quisque egestas diam in arcu\n                cursus. Eget mauris pharetra et ultrices neque. Amet luctus\n                venenatis lectus magna fringilla urna porttitor. Et tortor\n                consequat id porta nibh venenatis cras. Eget nunc scelerisque\n                viverra mauris. Consectetur purus ut faucibus pulvinar elementum\n                integer enim. Sem fringilla ut morbi tincidunt augue interdum.\n                Turpis egestas maecenas pharetra convallis. Consectetur lorem\n                donec massa sapien faucibus et. Nulla aliquet enim tortor at\n                auctor. Elementum curabitur vitae nunc sed velit dignissim\n                sodales ut. Mus mauris vitae ultricies leo integer malesuada\n                nunc. Interdum velit laoreet id donec ultrices tincidunt.\n                Porttitor rhoncus dolor purus non enim praesent elementum\n                facilisis. Ultrices gravida dictum fusce ut placerat orci nulla.\n                A pellentesque sit amet porttitor. Volutpat consequat mauris\n                nunc congue. Nibh ipsum consequat nisl vel.\n            </MyText>\n            <MyDivider>\n                <MyDividerLabel>I'm a divider</MyDividerLabel>\n            </MyDivider>\n            <MyText>\n                Nunc lobortis mattis aliquam faucibus purus. Duis tristique\n                sollicitudin nibh sit amet commodo nulla facilisi. Mi bibendum\n                neque egestas congue quisque. Tempus quam pellentesque nec nam\n                aliquam sem et tortor. Blandit cursus risus at ultrices mi\n                tempus. Pellentesque diam volutpat commodo sed egestas.\n                Malesuada fames ac turpis egestas sed tempus urna et. Enim sit\n                amet venenatis urna cursus eget. Ridiculus mus mauris vitae\n                ultricies leo. Dignissim enim sit amet venenatis urna cursus\n                eget. Fringilla ut morbi tincidunt augue interdum velit euismod\n                in. Blandit aliquam etiam erat velit. Aliquam faucibus purus in\n                massa tempor nec feugiat. Volutpat consequat mauris nunc congue\n                nisi vitae suscipit tellus mauris.\n            </MyText>\n        </Wrapper>\n    );\n};\n\nexport default RelativeOffsetDemo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    height: 100%;\n    background-color: #666;\n    padding: 36px;\n    overflow: auto;\n`;\n\nconst MyText = styled.div`\n    color: white;\n    font-size: 24px;\n    margin-bottom: 36px;\n`;\n\nconst MyButton = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 120px;\n    height: 120px;\n    background-color: white;\n    border-radius: 50%;\n    box-shadow: 0 6px 36px rgba(255, 255, 255, 0.85);\n    transition: 0.1s ease;\n    :hover {\n        box-shadow: 0 9px 48px rgba(255, 255, 255, 0.85);\n    }\n    :active {\n        box-shadow: 0 12px 72px rgba(255, 255, 255, 0.85);\n    }\n`;\n\nconst RelativeOffsetDemo2: React.FC = () => {\n    const counters = [];\n    for (let n = 0; n < 60; n++) {\n        counters.push(n);\n    }\n    return (\n        <Wrapper>\n            <MyText>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                Bibendum neque egestas congue quisque egestas diam in arcu\n                cursus. Eget mauris pharetra et ultrices neque. Amet luctus\n                venenatis lectus magna fringilla urna porttitor. Et tortor\n                consequat id porta nibh venenatis cras. Eget nunc scelerisque\n                viverra mauris. Consectetur purus ut faucibus pulvinar elementum\n                integer enim. Sem fringilla ut morbi tincidunt augue interdum.\n                Turpis egestas maecenas pharetra convallis. Consectetur lorem\n                donec massa sapien faucibus et. Nulla aliquet enim tortor at\n                auctor. Elementum curabitur vitae nunc sed velit dignissim\n                sodales ut. Mus mauris vitae ultricies leo integer malesuada\n                nunc. Interdum velit laoreet id donec ultrices tincidunt.\n                Porttitor rhoncus dolor purus non enim praesent elementum\n                facilisis. Ultrices gravida dictum fusce ut placerat orci nulla.\n                A pellentesque sit amet porttitor. Volutpat consequat mauris\n                nunc congue. Nibh ipsum consequat nisl vel.\n            </MyText>\n            <MyText>\n                Nunc lobortis mattis aliquam faucibus purus. Duis tristique\n                sollicitudin nibh sit amet commodo nulla facilisi. Mi bibendum\n                neque egestas congue quisque. Tempus quam pellentesque nec nam\n                aliquam sem et tortor. Blandit cursus risus at ultrices mi\n                tempus. Pellentesque diam volutpat commodo sed egestas.\n                Malesuada fames ac turpis egestas sed tempus urna et. Enim sit\n                amet venenatis urna cursus eget. Ridiculus mus mauris vitae\n                ultricies leo. Dignissim enim sit amet venenatis urna cursus\n                eget. Fringilla ut morbi tincidunt augue interdum velit euismod\n                in. Blandit aliquam etiam erat velit. Aliquam faucibus purus in\n                massa tempor nec feugiat. Volutpat consequat mauris nunc congue\n                nisi vitae suscipit tellus mauris.\n            </MyText>\n            <MyButton />\n        </Wrapper>\n    );\n};\n\nexport default RelativeOffsetDemo2;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    height: 100%;\n    background-color: #666;\n    padding: 36px;\n`;\n\nconst MyHeading = styled.div`\n    color: white;\n    font-size: 28px;\n`;\n\nconst MyTextSegment = styled.span`\n    display: inline-block;\n`;\n\nconst HeadingWrapDemo: React.FC = () => {\n    return (\n        <Wrapper>\n            <MyHeading>\n                <MyTextSegment>\n                    Here is a long text that wraps exactly here,&nbsp;\n                </MyTextSegment>\n                <MyTextSegment>\n                    but only when there is not enough space.\n                </MyTextSegment>\n            </MyHeading>\n        </Wrapper>\n    );\n};\n\nexport default HeadingWrapDemo;\n","import React from 'react';\n// @ts-ignore\nimport raw from 'raw.macro';\nimport { Deck, Slide } from 'spectacle';\nimport TitleSlide from './components/TitleSlide';\nimport SquisherSlide from './components/SquisherSlide';\nimport CodeSlide from './components/CodeSlide';\nimport IntroSlide from './components/IntroSlide';\nimport GridDemo from './demos/GridDemo';\nimport FlexboxDemo from './demos/FlexboxDemo';\nimport CenteringDemo from './demos/CenteringDemo';\nimport StickyDemo from './demos/StickyDemo';\nimport TransformFailureDemo from './demos/TransformFailureDemo';\nimport TransformDemo from './demos/TransformDemo';\nimport AspectRatioDemo from './demos/AspectRatioDemo';\nimport RelativeOffsetDemo from './demos/RelativeOffsetDemo';\nimport RelativeOffsetDemo2 from './demos/RelativeOffsetDemo2';\nimport HeadingWrapDemo from './demos/HeadingWrapDemo';\n\nconst THEME = {\n    colors: {\n        primary: '#ff5400',\n        secondary: '#ff5400',\n        tertiary: 'white',\n        quaternary: 'green',\n        quinary: 'blue',\n    },\n};\n\nconst Presentation: React.FC = () => {\n    return (\n        <Deck theme={THEME}>\n            <Slide>\n                <IntroSlide />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={1}\n                    title=\"I need a responsive grid that fits the screen width.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<GridDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/GridDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={2}\n                    title=\"I need 2 boxes, one is 200px wide, the other fills the rest.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<FlexboxDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/FlexboxDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={3}\n                    title=\"I need this text centered, horizontally and vertically.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<CenteringDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/CenteringDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={4}\n                    title=\"I need this ad to stick at the top when the customer scrolls down.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<StickyDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/StickyDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={5}\n                    title=\"I need 200 balls to bounce up and down, smoothly.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<TransformFailureDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/TransformFailureDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<TransformDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/TransformDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={6}\n                    title=\"I need everything in the grid to have a fixed aspect ratio.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<AspectRatioDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/AspectRatioDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={7}\n                    title=\"I need a divider with fixed margins above and below, and a label in the middle.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<RelativeOffsetDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/RelativeOffsetDemo.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={8}\n                    title=\"I need a button fixed to the middle of the screen.\"\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<RelativeOffsetDemo2 />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/RelativeOffsetDemo2.tsx')} />\n            </Slide>\n            <Slide>\n                <TitleSlide\n                    ordinal={9}\n                    title={\n                        <>\n                            <span style={{ display: 'inline-block' }}>\n                                I need this long text to wrap exactly right\n                                here,\n                            </span>\n                            <span style={{ display: 'inline-block' }}>\n                                can you do that for me?\n                            </span>\n                        </>\n                    }\n                />\n            </Slide>\n            <Slide>\n                <SquisherSlide demo={<HeadingWrapDemo />} />\n            </Slide>\n            <Slide>\n                <CodeSlide source={raw('./demos/HeadingWrapDemo.tsx')} />\n            </Slide>\n        </Deck>\n    );\n};\n\nexport default Presentation;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Presentation from './Presentation';\n\nconst GlobalStyles = createGlobalStyle`\n    body {\n        margin: 0;\n        > div > div > div > div > div > div {\n            overflow: hidden;\n        }\n    }\n    * {\n        box-sizing: border-box;\n    }\n`;\n\nconst Wrapper = styled.div``;\n\nfunction App() {\n    return (\n        <Wrapper>\n            <GlobalStyles />\n            <Presentation />\n        </Wrapper>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}